#!/bin/sh
# Run streamcluster on a Xen virtual machine (domU) with almost the ressources
# of the native machine (in terms of vcpus and memory).

error() {
    MSG=$1; shift
    echo "$0: $MSG" 1>&2
    exit 1
}

VMBASE=vm
VMNAME=xen-vm-0
RESULTS=`date +'%Y-%m-%d-%H-%M-%S'`

mkdir "$RESULTS" || error "cannot mkdir '$RESULTS'"
mkdir "$RESULTS/tools" || error "cannot mkdir '$RESULTS/tools'"
mkdir "$RESULTS/log" || error "cannot mkdir '$RESULTS/logs'"

build-streamcluster "$RESULTS/parsec" || exit 1
cp `which streamcluster` "$RESULTS/tools"
cp `which cpurate` "$RESULTS/tools"
cp `which memrate` "$RESULTS/tools"

if [ ! -e "$VMBASE" ] ; then
    xen-create "$VMBASE" || exit 1
fi

xen-clone "$VMBASE" "$VMNAME" || exit 1
xen-set-home "$VMNAME" "$RESULTS" || exit 1
xen-boot "$VMNAME"
xen-login "$VMNAME"

(
    echo 'cd /home'
    echo 'PATH=$PATH:$PWD/tools'
    echo 'cpurate log/cpu streamcluster &'
    echo 'memrate log/mem streamcluster &'
    echo 'streamcluster parsec'
    echo 'kill `cat log/cpu.pid`'
    echo 'kill `cat log/mem.pid`'
    echo 'rm log/cpu.pid'
    echo 'rm log/mem.pid'
    echo 'mv `find parsec/log/ -name "*.log"` log'
    echo 'sync'
) | xen-command "$VMNAME"

xen-shutdown "$VMNAME"

xen-get-home "$VMNAME" "$RESULTS" || exit 1
mv "$RESULTS/log"/* "$RESULTS"
rm -rf "$RESULTS/parsec" "$RESULTS/tools"
rmdir "$RESULTS/log"
rm -rf "$VMNAME"
